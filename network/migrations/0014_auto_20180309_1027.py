# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2018-03-09 15:27
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('network', '0013_auto_20180308_1503'),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.Experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetadataRec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.Experiment')),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryDataRec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.Experiment')),
            ],
        ),
        migrations.RemoveField(
            model_name='experimentfavorite',
            name='favorite',
        ),
        migrations.RemoveField(
            model_name='experimentfavorite',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='userfavorite',
            name='favorite',
        ),
        migrations.RemoveField(
            model_name='userfavorite',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='myuser',
            name='favorite_data',
        ),
        migrations.RemoveField(
            model_name='myuser',
            name='favorite_users',
        ),
        migrations.DeleteModel(
            name='ExperimentFavorite',
        ),
        migrations.DeleteModel(
            name='UserFavorite',
        ),
        migrations.AddField(
            model_name='primarydatarec',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.MyUser'),
        ),
        migrations.AddField(
            model_name='metadatarec',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.MyUser'),
        ),
        migrations.AddField(
            model_name='follow',
            name='followed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed', to='network.MyUser'),
        ),
        migrations.AddField(
            model_name='follow',
            name='following',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='network.MyUser'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.MyUser'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='favorite_experiments',
            field=models.ManyToManyField(blank=True, related_name='favorited', through='network.Favorite', to='network.Experiment'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='followed_users',
            field=models.ManyToManyField(blank=True, through='network.Follow', to='network.MyUser'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='metadata_recommendations',
            field=models.ManyToManyField(blank=True, related_name='metadata_rec', through='network.MetadataRec', to='network.Experiment'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='primary_data_recommedations',
            field=models.ManyToManyField(blank=True, related_name='primary_rec', through='network.PrimaryDataRec', to='network.Experiment'),
        ),
    ]
